{"version":3,"sources":["hooks/useForm.js","firebase/firebase-config.js","types/types.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","loadNotes","uid","collection","get","notesSnap","notes","forEach","note","push","id","data","activeNote","addNewNote","setNotes","startSaveNotes","dispatch","getState","url","noteToFirestore","doc","update","refreshNotes","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","error","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","NotesAppBar","date","momentDate","moment","format","active","style","display","event","files","text","allowOutsideClick","onBeforeOpen","isLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activedId","useRef","useEffect","current","deleteThisId","delete","JournalEntry","noteDate","noteDateDay","noteDateMonth","noteDateYear","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","NothingSelected","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ecd1a298.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues(newFormState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBwjM9_K7fJoSbB7UVWO6Ucrp_5lL1rDEA\",\r\n    authDomain: \"journal-app-react-a98b1.firebaseapp.com\",\r\n    projectId: \"journal-app-react-a98b1\",\r\n    storageBucket: \"journal-app-react-a98b1.appspot.com\",\r\n    messagingSenderId: \"592612483357\",\r\n    appId: \"1:592612483357:web:dfc447c7a9179f173d01f4\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider(); // autenticación con google\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase,\r\n}","export const types = {\r\n    // log page\r\n    login: '[AUTH] Login',\r\n    logout: '[AUTH] Logout',\r\n\r\n    // errors\r\n    uiSetError: '[UI] set error',\r\n    uiRemoveError: '[UI] remove error',\r\n\r\n    // loading\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    // entries\r\n    notesAddNew: '[NOTES] new notes',\r\n    notesActive: '[NOTES] Set active notes',\r\n    notesLoad: '[NOTES] Load notes',\r\n    notesUpdate: '[NOTES] Update notes',\r\n    noteFileUrl: '[NOTES] Updates image URL',\r\n    notesDelete: '[NOTES] Delete notes',\r\n    noteLogoutCleaning: '[NOTES] Logout cleaning'\r\n\r\n}","import { types } from \"../types/types\"\r\n\r\nexport const setError = (err) => {\r\n    return {\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n    return {\r\n        type: types.uiRemoveError,\r\n    }\r\n}\r\n\r\nexport const startLoading = () => {\r\n    return {\r\n        type: types.uiStartLoading,\r\n    }\r\n}\r\n\r\nexport const finishLoading = () => {\r\n    return {\r\n        type: types.uiFinishLoading,\r\n    }\r\n}","export const fileUpload = async (file) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/journal-app-back/image/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'journal-app-back');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData,\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","// Función que nos permite obtener los datos desde la base de datos\r\n\r\nimport { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async (uid) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get()\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(note => {\r\n        notes.push({\r\n            id: note.id,\r\n            ...note.data()\r\n        })\r\n    })\r\n\r\n    console.log(notes)\r\n\r\n    return notes;\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime(),\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n\r\n    }\r\n}\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes))\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNotes = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url\r\n        }\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n        dispatch(refreshNotes(note.id, noteToFirestore))\r\n        Swal.fire(\"Saved\", note.title, \"success\")\r\n    }\r\n}\r\n\r\nexport const refreshNotes = (id, note) => ({\r\n    type: types.notesUpdate,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n        const { active: activeNote } = getState().notes;\r\n        Swal.fire({\r\n            title: \"Uploading\", text: \"Please, wait\", allowOutsideClick: false, onBeforeOpen: () => {\r\n                Swal.isLoading()\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        dispatch(startSaveNotes(activeNote))\r\n        Swal.close()\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.noteLogoutCleaning\r\n})","import { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from '../types/types';\r\nimport Swal from 'sweetalert2';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n                dispatch(finishLoading())\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error', error.message, 'error')\r\n\r\n            });\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName,\r\n        }\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name });\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                );\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                Swal.fire('Error', error.message, 'error');\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        firebase.auth().signOut();\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    // dar acceso al dispatch para ejecutar las acciones\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading } = useSelector(state => state.ui);\r\n    console.log(loading)\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin())\r\n    }\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: \"nando@gmail.com\",\r\n        password: \"123456\",\r\n\r\n    });\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password))\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <h3 className='auth__title mb-5'>Login</h3>\r\n            <form className='animate__animated animate__fadeIn' onSubmit={handleLogin} >\r\n\r\n                <input\r\n                    className='auth__input'\r\n                    type='text'\r\n                    placeholder='Ema il'\r\n                    autoComplete='off'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    className='auth__input'\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button disabled={loading} className='btn btn-primary btn-block' type='submit'>Login</button>\r\n\r\n                <div className='auth__social-networks'>\r\n                    <p>Login with social networks</p>\r\n                    <div className=\"google-btn\" onClick={handleGoogleLogin}>\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link className='link' to='/auth/register'>Create new account</Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator'\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError } = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: 'Hernando',\r\n        email: 'nando@gmail.com',\r\n        password: '123456',\r\n        password2: '123456',\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    };\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('Name is required'))\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if (password !== password2 || password.length < 5) {\r\n            dispatch(setError('Password is not valid'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError())\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3 className='auth__title mb-5'>Register</h3>\r\n            <form className='animate__animated animate__fadeIn animate__faster' onSubmit={handleRegister}>\r\n                {\r\n                    msgError &&\r\n                    <div className='auth__alert-error'>\r\n                        {msgError}\r\n                    </div>\r\n                }\r\n                <input onChange={handleInputChange} value={name} className='auth__input' type='text' placeholder='Name' autoComplete='off' name='name' />\r\n                <input onChange={handleInputChange} value={email} className='auth__input' type='text' placeholder='Email' autoComplete='off' name='email' />\r\n                <input onChange={handleInputChange} value={password} className='auth__input' type='password' placeholder='Password' name='password' />\r\n                <input onChange={handleInputChange} value={password2} className='auth__input' type='password' placeholder='Confirm password' name='password2' />\r\n\r\n                <button className='btn btn-primary btn-block mb-5' type='submit'>Register</button>\r\n\r\n\r\n                <Link className='link' to='auth/login'>Already registered</Link>\r\n            </form>\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport {LoginScreen} from '../components/auth/LoginScreen';\r\nimport {RegisterScreen} from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className='auth__main'>\r\n            <div className='auth__box-container'>\r\n            <Switch>\r\n                <Route exact path='/auth/login' component = {LoginScreen} />\r\n                <Route exact path='/auth/register' component = {RegisterScreen} />\r\n                <Redirect to='/auth/login' />\r\n            </Switch>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNotes, startUploading } from '../../actions/notes';\r\nexport const NotesAppBar = ({ date }) => {\r\n    const momentDate = moment(date).format('dddd, MMMM Do YYYY');\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n    const handleSave = () => {\r\n        dispatch(startSaveNotes(active))\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click()\r\n    }\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n\r\n        if (file) {\r\n            dispatch(startUploading(file))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='notes__appbar'>\r\n            <span>{momentDate}</span>\r\n            <input\r\n                id=\"fileSelector\"\r\n                type='file'\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileChange}\r\n            />\r\n            <div>\r\n                <button\r\n                    onClick={handlePictureClick}\r\n                    className='btn'>\r\n                    Picture\r\n                </button>\r\n                <button\r\n                    onClick={handleSave}\r\n                    className='btn'>\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\nexport const NoteScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { active: note } = useSelector(state => state.notes);\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const { body, title, date } = formValues;\r\n    const activedId = useRef(note.id)\r\n\r\n    useEffect(() => {\r\n        if (note.id !== activedId.current) {\r\n            reset(note);\r\n            activedId.current = note.id\r\n        }\r\n    }, [note, reset]);\r\n\r\n    const handleDelete = () => {\r\n        const deleteThisId = activedId.current;\r\n        dispatch(startDeleting(deleteThisId))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, { ...formValues }))\r\n    }, [formValues, dispatch])\r\n\r\n    return (\r\n        <div className='notes__main-content'>\r\n            <NotesAppBar date={date} />\r\n\r\n            <div className='notes__content'>\r\n                <input\r\n                    type='text'\r\n                    placeholder='Some awesome title'\r\n                    className='notes__title-input'\r\n                    autoComplete='off'\r\n                    value={title}\r\n                    name=\"title\"\r\n                    onChange={handleInputChange}\r\n                />\r\n                <textarea\r\n                    placeholder='What happened today'\r\n                    className='notes__textarea'\r\n                    value={body}\r\n                    name=\"body\"\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n                {\r\n                    (note.url) &&\r\n                    <div className='notes__image'>\r\n                        <img\r\n                            src={`${note.url}`}\r\n                            alt={`${title}`}\r\n                        />\r\n\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n            <button className=\"btn btn-danger\" onClick={handleDelete}>\r\n                Delete\r\n            </button>\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n    const noteDate = moment(date);\r\n    const noteDateDay = noteDate.format('D');\r\n    const noteDateMonth = noteDate.format('M');\r\n    const noteDateYear = noteDate.format('YYYY');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, { date, title, body, url }))\r\n    }\r\n\r\n    return (\r\n        <div onClick={handleEntryClick} className='journal__entry pointer hover animate__animated animate__fadeInDown'>\r\n            <div\r\n                className='journal__entry-picture'\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${url})`\r\n                }}\r\n            ></div>\r\n\r\n            <div className='journal__entry-body'>\r\n                <p className='journal__entry-title'>{title}</p>\r\n                <p className='journal__entry-content'>{body}</p>\r\n            </div>\r\n\r\n            <div className='journal__entry-date-box'>\r\n                <h4>{(`${noteDateDay}/${noteDateMonth}/${noteDateYear}`)}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className='journal__entries'>\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry key={note.id} {...note} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogOut = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote())\r\n    }\r\n\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n\r\n    return (\r\n        <aside className='journal__sidebar'>\r\n            <div className='journal__sidebar-navbar animate__animated animate__bounceInLeft animate__slower'>\r\n                <h3 className='mt-5'>\r\n                    <i className='far fa-moon' />\r\n                    <span>{name}</span>\r\n                </h3>\r\n\r\n                <button onClick={handleLogOut} className='btn'>\r\n                    Log Out\r\n                </button>\r\n            </div>\r\n\r\n            <div className='journal__new-entry' onClick={handleAddNew}>\r\n                <i className='far fa-calendar-plus fa-5x animate__animated animate__bounceInLeft animate__slow' />\r\n                <p className='mt-5 animate__animated animate__bounceInLeft animate__slow'>New Entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className='nothing__main-content '>\r\n            <p className='animate__animated animate__zoomIn'>\r\n                Select something\r\n                <br />\r\n                or create an entry\r\n            </p>\r\n            <i className='far fa-star fa-4x mt-5 animate__animated animate__zoomIn'></i>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { Sidebar } from './Sidebar';\r\nimport { NothingSelected } from './NothingSelected';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className='journal__main-content animate__animated animate__fadeIn'>\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen />\r\n                        )\r\n                        : (<NothingSelected />)\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"auth/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? (<Redirect to=\"/\" />)\r\n                    : (<Component {...props} />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter, Switch, Redirect } from 'react-router-dom';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n                dispatch(startLoadingNotes(user.uid))\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setChecking(false);\r\n        })\r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if (checking) {\r\n        return (\r\n            <h1>Espere...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div >\r\n\r\n                <Switch>\r\n                    <PublicRoute isAuthenticated={isLoggedIn} path='/auth' component={AuthRouter} />\r\n                    <PrivateRoute exact isAuthenticated={isLoggedIn} path='/' component={JournalScreen} />\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import { types } from '../types/types'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload,\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null,\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types'\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null,\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload,\r\n                },\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdate:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.noteLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n//Importamos el store en el punto más alto de la aplicación\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer,\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","/*\r\n\r\n{\r\n    uid: \"user_ID\",\r\n    name: \"user_NAME\"\r\n}\r\n\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\nimport './styles/styles.scss';\r\n\r\nconst JournalApp = () => (\r\n    <Provider store={store}>\r\n        <AppRouter />\r\n    </Provider>\r\n)\r\n\r\nexport default JournalApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport JournalApp from './JournalApp';\n\nReactDOM.render( <JournalApp />, document.getElementById('root') );\n\n"],"sourceRoot":""}